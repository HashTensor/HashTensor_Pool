volumes:
  prometheus_data: {}
services:
  ks_bridge:
    build:
      context: .
      no_cache: true
    container_name: ks_bridge
    restart: unless-stopped
    user: "0"
    network_mode: host    # <-- bypasses Docker NAT
    command:
      - '-stats=true'
      - '-vardiff=true'
      - '-kaspa=127.0.0.1:16110'
      - '-pow2clamp=true'
      - '-extranonce=2'
      - '-prom=:2114'
      - '-stratum=:4444' 
    ports:
      - 4444:4444  # In fact, port 5555 (reverse proxy) is used here, it is proxied through nginx.
      - 2114:2114
    extra_hosts:
      - host.docker.internal:host-gateway
  ks_bridge_highdiff:
    build:
      context: .
      no_cache: true
    container_name: ks_bridge_highdiff
    restart: unless-stopped
    user: "0"
    network_mode: host
    command:
      - '-stats=true'
      - '-kaspa=127.0.0.1:16110'
      - '-pow2clamp=true'        # (required for ASICs)
      - '-extranonce=3'          # (required for IceRiver ASICs)
      - '-stratum=:6666'         # <--- new port
      - '-mindiff=16384' # 2^14, â‰ˆ16.4T
      - '-prom=:2115'
      - '-vardiff=true'          # enable variable difficulty
    ports:
      - 6666:6666                # <--- expose the new port
      - 2115:2115                # (optional) if you want a separate prom port
    extra_hosts:
      - host.docker.internal:host-gateway

  grafana:
    image: grafana/grafana-oss:latest
    container_name: ks_grafana
    restart: unless-stopped
    user: "0"
    volumes:
      - ./docker/grafana:/var/lib/grafana
#    env_file:
#      - ./docker/grafana.env
    ports:
      - 3000:3000
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
  prometheus:
    image: prom/prometheus:latest
    container_name: ks_prom
    restart: unless-stopped
    volumes:
      - prometheus_data:/prometheus
      - ./docker/prometheus-internal.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    extra_hosts:
      - host.docker.internal:host-gateway
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
